{"ast":null,"code":"import * as i0 from \"@angular/core\";\nconst _c0 = [\"days\"];\nconst _c1 = [\"hours\"];\nconst _c2 = [\"minutes\"];\nconst _c3 = [\"seconds\"];\nexport let CountdownComponent = /*#__PURE__*/(() => {\n  class CountdownComponent {\n    constructor() {\n      this.targetDate = new Date(2024, 11, 9);\n      this.targetTime = this.targetDate.getTime();\n      this.months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    }\n    ngAfterViewInit() {\n      setInterval(() => {\n        this.tickTock();\n        this.difference = this.targetTime - this.now;\n        this.difference = this.difference / (1000 * 60 * 60 * 24);\n        !isNaN(this.days.nativeElement.innerText) ? this.days.nativeElement.innerText = Math.floor(this.difference) : this.days.nativeElement.innerHTML = `<img src=\"https://i.gifer.com/VAyR.gif\" />`;\n      }, 1000);\n    }\n    tickTock() {\n      this.date = new Date();\n      this.now = this.date.getTime();\n      this.days.nativeElement.innerText = Math.floor(this.difference);\n      this.hours.nativeElement.innerText = 23 - this.date.getHours();\n      this.minutes.nativeElement.innerText = 60 - this.date.getMinutes();\n      this.seconds.nativeElement.innerText = 60 - this.date.getSeconds();\n    }\n    static #_ = this.ɵfac = function CountdownComponent_Factory(t) {\n      return new (t || CountdownComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CountdownComponent,\n      selectors: [[\"app-countdown\"]],\n      viewQuery: function CountdownComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 7);\n          i0.ɵɵviewQuery(_c1, 7);\n          i0.ɵɵviewQuery(_c2, 7);\n          i0.ɵɵviewQuery(_c3, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.days = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.hours = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.minutes = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.seconds = _t.first);\n        }\n      },\n      decls: 20,\n      vars: 0,\n      consts: [[1, \"count-down-timer\"], [1, \"wrapper\"], [1, \"times\"], [1, \"circle-date\"], [\"days\", \"\"], [\"hours\", \"\"], [\"minutes\", \"\"], [\"seconds\", \"\"], [1, \"description\"]],\n      template: function CountdownComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n          i0.ɵɵelement(3, \"p\", 3, 4)(5, \"p\", 3, 5)(7, \"p\", 3, 6)(9, \"p\", 3, 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"div\", 8)(12, \"p\");\n          i0.ɵɵtext(13, \"D\\u00EDas\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"p\");\n          i0.ɵɵtext(15, \"Horas\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"p\");\n          i0.ɵɵtext(17, \"Minutos\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"p\");\n          i0.ɵɵtext(19, \"Segundos\");\n          i0.ɵɵelementEnd()()()();\n        }\n      },\n      styles: [\".count-down-timer[_ngcontent-%COMP%]{text-align:center;width:320px;margin:20px auto}.count-down-timer[_ngcontent-%COMP%] > p[_ngcontent-%COMP%]{margin:5px 0 15px}.count-down-timer[_ngcontent-%COMP%]   .wrapper[_ngcontent-%COMP%]   .description[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(4,25%);text-align:center;width:390px;margin-left:-35px}.count-down-timer[_ngcontent-%COMP%]   .wrapper[_ngcontent-%COMP%]   .description[_ngcontent-%COMP%] > p[_ngcontent-%COMP%]{padding:10px;margin:0}.count-down-timer[_ngcontent-%COMP%]   .wrapper[_ngcontent-%COMP%]   .times[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(4,25%);grid-column-gap:10px;margin-left:-30px;color:#fff}.count-down-timer[_ngcontent-%COMP%]   .wrapper[_ngcontent-%COMP%]   .times[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{position:relative;margin:0;font-size:30px;border:#d2c5bf 2px solid;border-radius:100%;background-color:#ded0c5;padding:20px 0}.count-down-timer[_ngcontent-%COMP%]   .wrapper[_ngcontent-%COMP%]   .times[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]     img{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);width:40px;display:block;height:40px}@media screen and (max-width: 430px){.count-down-timer[_ngcontent-%COMP%]{margin:20px}}\"]\n    });\n  }\n  return CountdownComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}